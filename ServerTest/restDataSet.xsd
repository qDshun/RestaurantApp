<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="restDataSet" targetNamespace="http://tempuri.org/restDataSet.xsd" xmlns:mstns="http://tempuri.org/restDataSet.xsd" xmlns="http://tempuri.org/restDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="restConnectionString1" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="restConnectionString1 (Settings)" PropertyReference="ApplicationSettings.ServerTest.Properties.Settings.GlobalReference.Default.restConnectionString1" Provider="Devart.Data.MySql" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="comment_or_complainTableAdapter" GeneratorDataComponentClassName="comment_or_complainTableAdapter" Name="comment_or_complain" UserDataComponentName="comment_or_complainTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="restConnectionString1 (Settings)" DbObjectName="rest.comment_or_complain" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `rest`.`comment_or_complain` WHERE ((`comment_or_complain_id` = :Original_comment_or_complain_id) AND (`name` = :Original_name) AND ((:IsNull_email = 1 AND `email` IS NULL) OR (`email` = :Original_email)) AND (`comment` = :Original_comment) AND (`order_id` = :Original_order_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_comment_or_complain_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="comment_or_complain_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_email" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_comment" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="comment" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="order_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `rest`.`comment_or_complain` (`comment_or_complain_id`, `name`, `email`, `comment`, `order_id`) VALUES (:comment_or_complain_id, :name, :email, :comment, :order_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="comment_or_complain_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="comment_or_complain_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="comment" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="comment" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="order_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT comment_or_complain_id, name, email, `comment`, order_id FROM rest.comment_or_complain</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `rest`.`comment_or_complain` SET `comment_or_complain_id` = :comment_or_complain_id, `name` = :name, `email` = :email, `comment` = :comment, `order_id` = :order_id WHERE ((`comment_or_complain_id` = :Original_comment_or_complain_id) AND (`name` = :Original_name) AND ((:IsNull_email = 1 AND `email` IS NULL) OR (`email` = :Original_email)) AND (`comment` = :Original_comment) AND (`order_id` = :Original_order_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="comment_or_complain_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="comment_or_complain_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="comment" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="comment" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="order_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_comment_or_complain_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="comment_or_complain_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_email" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_comment" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="comment" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="order_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="comment_or_complain_id" DataSetColumn="comment_or_complain_id" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="email" DataSetColumn="email" />
              <Mapping SourceColumn="comment" DataSetColumn="comment" />
              <Mapping SourceColumn="order_id" DataSetColumn="order_id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="dish_categoryTableAdapter" GeneratorDataComponentClassName="dish_categoryTableAdapter" Name="dish_category" UserDataComponentName="dish_categoryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="restConnectionString1 (Settings)" DbObjectName="rest.dish_category" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `rest`.`dish_category` WHERE ((`category_id` = :Original_category_id) AND (`category_name` = :Original_category_name) AND ((:IsNull_notes = 1 AND `notes` IS NULL) OR (`notes` = :Original_notes)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_category_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="category_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_category_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="category_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_notes" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="notes" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_notes" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="notes" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `rest`.`dish_category` (`category_id`, `category_name`, `notes`) VALUES (:category_id, :category_name, :notes)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="category_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="category_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="category_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="category_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="notes" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="notes" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT category_id, category_name, notes FROM rest.dish_category</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `rest`.`dish_category` SET `category_id` = :category_id, `category_name` = :category_name, `notes` = :notes WHERE ((`category_id` = :Original_category_id) AND (`category_name` = :Original_category_name) AND ((:IsNull_notes = 1 AND `notes` IS NULL) OR (`notes` = :Original_notes)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="category_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="category_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="category_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="category_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="notes" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="notes" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_category_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="category_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_category_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="category_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_notes" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="notes" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_notes" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="notes" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="category_id" DataSetColumn="category_id" />
              <Mapping SourceColumn="category_name" DataSetColumn="category_name" />
              <Mapping SourceColumn="notes" DataSetColumn="notes" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="dish_dictionaryTableAdapter" GeneratorDataComponentClassName="dish_dictionaryTableAdapter" Name="dish_dictionary" UserDataComponentName="dish_dictionaryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="restConnectionString1 (Settings)" DbObjectName="rest.dish_dictionary" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `rest`.`dish_dictionary` WHERE ((`dish_id` = :Original_dish_id) AND ((:IsNull_name = 1 AND `name` IS NULL) OR (`name` = :Original_name)) AND (`price` = :Original_price) AND (`amount` = :Original_amount) AND ((:IsNull_category_id = 1 AND `category_id` IS NULL) OR (`category_id` = :Original_category_id)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_dish_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dish_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_amount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="amount" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_category_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="category_id" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_category_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="category_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `rest`.`dish_dictionary` (`dish_id`, `name`, `price`, `amount`, `category_id`) VALUES (:dish_id, :name, :price, :amount, :category_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="dish_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dish_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="amount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="amount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="category_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="category_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT dish_id, name, price, amount, category_id FROM rest.dish_dictionary</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `rest`.`dish_dictionary` SET `dish_id` = :dish_id, `name` = :name, `price` = :price, `amount` = :amount, `category_id` = :category_id WHERE ((`dish_id` = :Original_dish_id) AND ((:IsNull_name = 1 AND `name` IS NULL) OR (`name` = :Original_name)) AND (`price` = :Original_price) AND (`amount` = :Original_amount) AND ((:IsNull_category_id = 1 AND `category_id` IS NULL) OR (`category_id` = :Original_category_id)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="dish_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dish_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="amount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="amount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="category_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="category_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_dish_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dish_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_amount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="amount" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_category_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="category_id" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_category_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="category_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="dish_id" DataSetColumn="dish_id" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="price" DataSetColumn="price" />
              <Mapping SourceColumn="amount" DataSetColumn="amount" />
              <Mapping SourceColumn="category_id" DataSetColumn="category_id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="dishes_orderTableAdapter" GeneratorDataComponentClassName="dishes_orderTableAdapter" Name="dishes_order" UserDataComponentName="dishes_orderTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="restConnectionString1 (Settings)" DbObjectName="rest.dishes_order" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `rest`.`dishes_order` WHERE ((`dish_id` = :Original_dish_id) AND (`order_id` = :Original_order_id) AND ((:IsNull_dishes_count = 1 AND `dishes_count` IS NULL) OR (`dishes_count` = :Original_dishes_count)) AND (`dishes_order_id` = :Original_dishes_order_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_dish_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dish_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="order_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_dishes_count" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dishes_count" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_dishes_count" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dishes_count" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_dishes_order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dishes_order_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `rest`.`dishes_order` (`dish_id`, `order_id`, `dishes_count`, `dishes_order_id`) VALUES (:dish_id, :order_id, :dishes_count, :dishes_order_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="dish_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dish_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="order_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="dishes_count" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dishes_count" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="dishes_order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dishes_order_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT dish_id, order_id, dishes_count, dishes_order_id FROM rest.dishes_order</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `rest`.`dishes_order` SET `dish_id` = :dish_id, `order_id` = :order_id, `dishes_count` = :dishes_count, `dishes_order_id` = :dishes_order_id WHERE ((`dish_id` = :Original_dish_id) AND (`order_id` = :Original_order_id) AND ((:IsNull_dishes_count = 1 AND `dishes_count` IS NULL) OR (`dishes_count` = :Original_dishes_count)) AND (`dishes_order_id` = :Original_dishes_order_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="dish_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dish_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="order_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="dishes_count" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dishes_count" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="dishes_order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dishes_order_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_dish_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dish_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="order_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_dishes_count" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dishes_count" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_dishes_count" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dishes_count" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_dishes_order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dishes_order_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="dish_id" DataSetColumn="dish_id" />
              <Mapping SourceColumn="order_id" DataSetColumn="order_id" />
              <Mapping SourceColumn="dishes_count" DataSetColumn="dishes_count" />
              <Mapping SourceColumn="dishes_order_id" DataSetColumn="dishes_order_id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="fineTableAdapter" GeneratorDataComponentClassName="fineTableAdapter" Name="fine" UserDataComponentName="fineTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="restConnectionString1 (Settings)" DbObjectName="rest.fine" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `rest`.`fine` WHERE ((`fine_id` = :Original_fine_id) AND (`order_id` = :Original_order_id) AND (`fine_count` = :Original_fine_count))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_fine_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="fine_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="order_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_fine_count" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="fine_count" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `rest`.`fine` (`fine_id`, `order_id`, `fine_count`) VALUES (:fine_id, :order_id, :fine_count)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="fine_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="fine_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="order_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="fine_count" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="fine_count" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT fine_id, order_id, fine_count FROM rest.fine</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `rest`.`fine` SET `fine_id` = :fine_id, `order_id` = :order_id, `fine_count` = :fine_count WHERE ((`fine_id` = :Original_fine_id) AND (`order_id` = :Original_order_id) AND (`fine_count` = :Original_fine_count))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="fine_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="fine_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="order_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="fine_count" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="fine_count" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_fine_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="fine_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="order_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_fine_count" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="fine_count" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="fine_id" DataSetColumn="fine_id" />
              <Mapping SourceColumn="order_id" DataSetColumn="order_id" />
              <Mapping SourceColumn="fine_count" DataSetColumn="fine_count" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="fine_dictionaryTableAdapter" GeneratorDataComponentClassName="fine_dictionaryTableAdapter" Name="fine_dictionary" UserDataComponentName="fine_dictionaryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="restConnectionString1 (Settings)" DbObjectName="rest.fine_dictionary" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `rest`.`fine_dictionary` WHERE ((`fine_id` = :Original_fine_id) AND (`price` = :Original_price) AND (`name` = :Original_name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_fine_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="fine_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `rest`.`fine_dictionary` (`fine_id`, `price`, `name`) VALUES (:fine_id, :price, :name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="fine_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="fine_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT fine_id, price, name FROM rest.fine_dictionary</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `rest`.`fine_dictionary` SET `fine_id` = :fine_id, `price` = :price, `name` = :name WHERE ((`fine_id` = :Original_fine_id) AND (`price` = :Original_price) AND (`name` = :Original_name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="fine_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="fine_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_fine_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="fine_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="fine_id" DataSetColumn="fine_id" />
              <Mapping SourceColumn="price" DataSetColumn="price" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="orderTableAdapter" GeneratorDataComponentClassName="orderTableAdapter" Name="order" UserDataComponentName="orderTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="restConnectionString1 (Settings)" DbObjectName="rest.`order`" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `rest`.`order` WHERE ((`order_id` = :Original_order_id) AND ((:IsNull_table_id = 1 AND `table_id` IS NULL) OR (`table_id` = :Original_table_id)) AND (`order_date` = :Original_order_date))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="order_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_table_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="table_id" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_table_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="table_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="Original_order_date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="order_date" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `rest`.`order` (`order_id`, `table_id`, `order_date`) VALUES (:order_id, :table_id, :order_date)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="order_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="table_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="table_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="order_date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="order_date" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT order_id, table_id, order_date FROM rest.`order`</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `rest`.`order` SET `order_id` = :order_id, `table_id` = :table_id, `order_date` = :order_date WHERE ((`order_id` = :Original_order_id) AND ((:IsNull_table_id = 1 AND `table_id` IS NULL) OR (`table_id` = :Original_table_id)) AND (`order_date` = :Original_order_date))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="order_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="table_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="table_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="order_date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="order_date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="order_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_table_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="table_id" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_table_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="table_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="Original_order_date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="order_date" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="order_id" DataSetColumn="order_id" />
              <Mapping SourceColumn="table_id" DataSetColumn="table_id" />
              <Mapping SourceColumn="order_date" DataSetColumn="order_date" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="positionTableAdapter" GeneratorDataComponentClassName="positionTableAdapter" Name="position" UserDataComponentName="positionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="restConnectionString1 (Settings)" DbObjectName="rest.position" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `rest`.`position` WHERE ((`position_id` = :Original_position_id) AND (`staff_position` = :Original_staff_position) AND (`salary` = :Original_salary))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_position_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="position_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_staff_position" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="staff_position" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_salary" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="salary" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `rest`.`position` (`position_id`, `staff_position`, `salary`) VALUES (:position_id, :staff_position, :salary)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="position_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="position_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="staff_position" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="staff_position" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="salary" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="salary" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT position_id, staff_position, salary FROM rest.position</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `rest`.`position` SET `position_id` = :position_id, `staff_position` = :staff_position, `salary` = :salary WHERE ((`position_id` = :Original_position_id) AND (`staff_position` = :Original_staff_position) AND (`salary` = :Original_salary))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="position_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="position_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="staff_position" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="staff_position" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="salary" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="salary" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_position_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="position_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_staff_position" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="staff_position" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_salary" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="salary" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="position_id" DataSetColumn="position_id" />
              <Mapping SourceColumn="staff_position" DataSetColumn="staff_position" />
              <Mapping SourceColumn="salary" DataSetColumn="salary" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="serviceTableAdapter" GeneratorDataComponentClassName="serviceTableAdapter" Name="service" UserDataComponentName="serviceTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="restConnectionString1 (Settings)" DbObjectName="rest.service" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `rest`.`service` WHERE ((`service_id` = :Original_service_id) AND (`order_id` = :Original_order_id) AND (`service_count` = :Original_service_count))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_service_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="service_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="order_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_service_count" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="service_count" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `rest`.`service` (`service_id`, `order_id`, `service_count`) VALUES (:service_id, :order_id, :service_count)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="service_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="service_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="order_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="service_count" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="service_count" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT service_id, order_id, service_count FROM rest.service</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `rest`.`service` SET `service_id` = :service_id, `order_id` = :order_id, `service_count` = :service_count WHERE ((`service_id` = :Original_service_id) AND (`order_id` = :Original_order_id) AND (`service_count` = :Original_service_count))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="service_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="service_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="order_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="service_count" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="service_count" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_service_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="service_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="order_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_service_count" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="service_count" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="service_id" DataSetColumn="service_id" />
              <Mapping SourceColumn="order_id" DataSetColumn="order_id" />
              <Mapping SourceColumn="service_count" DataSetColumn="service_count" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="service_dictionaryTableAdapter" GeneratorDataComponentClassName="service_dictionaryTableAdapter" Name="service_dictionary" UserDataComponentName="service_dictionaryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="restConnectionString1 (Settings)" DbObjectName="rest.service_dictionary" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `rest`.`service_dictionary` WHERE ((`service_id` = :Original_service_id) AND (`price` = :Original_price) AND (`name` = :Original_name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_service_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="service_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `rest`.`service_dictionary` (`service_id`, `price`, `name`) VALUES (:service_id, :price, :name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="service_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="service_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT service_id, price, name FROM rest.service_dictionary</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `rest`.`service_dictionary` SET `service_id` = :service_id, `price` = :price, `name` = :name WHERE ((`service_id` = :Original_service_id) AND (`price` = :Original_price) AND (`name` = :Original_name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="service_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="service_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_service_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="service_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="service_id" DataSetColumn="service_id" />
              <Mapping SourceColumn="price" DataSetColumn="price" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="staffTableAdapter" GeneratorDataComponentClassName="staffTableAdapter" Name="staff" UserDataComponentName="staffTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="restConnectionString1 (Settings)" DbObjectName="rest.staff" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `rest`.`staff` WHERE ((`staff_id` = :Original_staff_id) AND (`name` = :Original_name) AND ((:IsNull_passport_id = 1 AND `passport_id` IS NULL) OR (`passport_id` = :Original_passport_id)) AND ((:IsNull_email = 1 AND `email` IS NULL) OR (`email` = :Original_email)) AND (`position_id` = :Original_position_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_staff_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="staff_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_passport_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="passport_id" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_passport_id" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="passport_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_email" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_position_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="position_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `rest`.`staff` (`staff_id`, `name`, `passport_id`, `email`, `position_id`) VALUES (:staff_id, :name, :passport_id, :email, :position_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="staff_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="staff_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="passport_id" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="passport_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="position_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="position_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT staff_id, name, passport_id, email, position_id FROM rest.staff</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `rest`.`staff` SET `staff_id` = :staff_id, `name` = :name, `passport_id` = :passport_id, `email` = :email, `position_id` = :position_id WHERE ((`staff_id` = :Original_staff_id) AND (`name` = :Original_name) AND ((:IsNull_passport_id = 1 AND `passport_id` IS NULL) OR (`passport_id` = :Original_passport_id)) AND ((:IsNull_email = 1 AND `email` IS NULL) OR (`email` = :Original_email)) AND (`position_id` = :Original_position_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="staff_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="staff_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="passport_id" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="passport_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="position_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="position_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_staff_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="staff_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_passport_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="passport_id" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_passport_id" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="passport_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_email" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_position_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="position_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="staff_id" DataSetColumn="staff_id" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="passport_id" DataSetColumn="passport_id" />
              <Mapping SourceColumn="email" DataSetColumn="email" />
              <Mapping SourceColumn="position_id" DataSetColumn="position_id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="staff_on_orderTableAdapter" GeneratorDataComponentClassName="staff_on_orderTableAdapter" Name="staff_on_order" UserDataComponentName="staff_on_orderTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="restConnectionString1 (Settings)" DbObjectName="rest.staff_on_order" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `rest`.`staff_on_order` WHERE ((`staff_id` = :Original_staff_id) AND (`order_id` = :Original_order_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_staff_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="staff_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="order_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `rest`.`staff_on_order` (`staff_id`, `order_id`) VALUES (:staff_id, :order_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="staff_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="staff_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="order_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT staff_id, order_id FROM rest.staff_on_order</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `rest`.`staff_on_order` SET `staff_id` = :staff_id, `order_id` = :order_id WHERE ((`staff_id` = :Original_staff_id) AND (`order_id` = :Original_order_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="staff_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="staff_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="order_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_staff_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="staff_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_order_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="order_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="staff_id" DataSetColumn="staff_id" />
              <Mapping SourceColumn="order_id" DataSetColumn="order_id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="usersTableAdapter" GeneratorDataComponentClassName="usersTableAdapter" Name="users" UserDataComponentName="usersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="restConnectionString1 (Settings)" DbObjectName="rest.users" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `rest`.`users` WHERE ((`user_id` = :Original_user_id) AND (`hash` = :Original_hash) AND (`email` = :Original_email))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_user_id" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="user_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_hash" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="hash" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `rest`.`users` (`user_id`, `hash`, `email`) VALUES (:user_id, :hash, :email)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="user_id" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="user_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="hash" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="hash" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT user_id, `hash`, email FROM rest.users</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `rest`.`users` SET `user_id` = :user_id, `hash` = :hash, `email` = :email WHERE ((`user_id` = :Original_user_id) AND (`hash` = :Original_hash) AND (`email` = :Original_email))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="user_id" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="user_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="hash" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="hash" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_user_id" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="user_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_hash" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="hash" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="user_id" DataSetColumn="user_id" />
              <Mapping SourceColumn="hash" DataSetColumn="hash" />
              <Mapping SourceColumn="email" DataSetColumn="email" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="dish_menuTableAdapter" GeneratorDataComponentClassName="dish_menuTableAdapter" Name="dish_menu" UserDataComponentName="dish_menuTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="restConnectionString1 (Settings)" DbObjectName="rest.dish_menu" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT dish_id, category_name, name, amount, price, notes FROM rest.dish_menu</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="dish_id" DataSetColumn="dish_id" />
              <Mapping SourceColumn="category_name" DataSetColumn="category_name" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="amount" DataSetColumn="amount" />
              <Mapping SourceColumn="price" DataSetColumn="price" />
              <Mapping SourceColumn="notes" DataSetColumn="notes" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="fines_and_servicesTableAdapter" GeneratorDataComponentClassName="fines_and_servicesTableAdapter" Name="fines_and_services" UserDataComponentName="fines_and_servicesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="restConnectionString1 (Settings)" DbObjectName="rest.fines_and_services" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Name, price FROM rest.fines_and_services</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="price" DataSetColumn="price" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="money_from_orderTableAdapter" GeneratorDataComponentClassName="money_from_orderTableAdapter" Name="money_from_order" UserDataComponentName="money_from_orderTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="restConnectionString1 (Settings)" DbObjectName="rest.money_from_order" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT order_id FROM rest.money_from_order</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="order_id" DataSetColumn="order_id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="order_listTableAdapter" GeneratorDataComponentClassName="order_listTableAdapter" Name="order_list" UserDataComponentName="order_listTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="restConnectionString1 (Settings)" DbObjectName="" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT `order №`, name, count, price, total, `table №`, `order date` FROM rest.order_list</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="order №" DataSetColumn="order №" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="count" DataSetColumn="count" />
              <Mapping SourceColumn="price" DataSetColumn="price" />
              <Mapping SourceColumn="total" DataSetColumn="total" />
              <Mapping SourceColumn="table №" DataSetColumn="table №" />
              <Mapping SourceColumn="order date" DataSetColumn="order date" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="rest_staffTableAdapter" GeneratorDataComponentClassName="rest_staffTableAdapter" Name="rest_staff" UserDataComponentName="rest_staffTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="restConnectionString1 (Settings)" DbObjectName="rest.rest_staff" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT staff_id, name, passport_id, email, position, salary FROM rest.rest_staff</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="staff_id" DataSetColumn="staff_id" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="passport_id" DataSetColumn="passport_id" />
              <Mapping SourceColumn="email" DataSetColumn="email" />
              <Mapping SourceColumn="position" DataSetColumn="position" />
              <Mapping SourceColumn="salary" DataSetColumn="salary" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="OrderCommentsTableAdapter" GeneratorDataComponentClassName="OrderCommentsTableAdapter" Name="OrderComments" UserDataComponentName="OrderCommentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="restConnectionString1 (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        comment_or_complain.name, comment_or_complain.email, comment_or_complain.`comment`, `order`.order_id, `order`.table_id
FROM            comment_or_complain INNER JOIN
                         `order` ON comment_or_complain.order_id = `order`.order_id</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="email" DataSetColumn="email" />
              <Mapping SourceColumn="comment" DataSetColumn="comment" />
              <Mapping SourceColumn="order_id" DataSetColumn="order_id" />
              <Mapping SourceColumn="table_id" DataSetColumn="table_id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DataTable1TableAdapter" GeneratorDataComponentClassName="DataTable1TableAdapter" Name="DataTable1" UserDataComponentName="DataTable1TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="restConnectionString1 (Settings)" DbObjectName="" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DECLARE @o_id INT
SELECT        order_id, table_id, order_date
FROM            `order`
WHERE order.order_id=@o_id</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings />
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ServiceDetailsTableAdapter" GeneratorDataComponentClassName="ServiceDetailsTableAdapter" Name="ServiceDetails" UserDataComponentName="ServiceDetailsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="restConnectionString1 (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        `order`.order_id, service_dictionary.price, service_dictionary.name, service.service_id, service.service_count AS `count`
FROM            service INNER JOIN
                         service_dictionary ON service.service_id = service_dictionary.service_id INNER JOIN
                         `order` ON service.order_id = `order`.order_id</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="order_id" DataSetColumn="order_id" />
              <Mapping SourceColumn="price" DataSetColumn="price" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="service_id" DataSetColumn="service_id" />
              <Mapping SourceColumn="count" DataSetColumn="count" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="FineDetailsTableAdapter" GeneratorDataComponentClassName="FineDetailsTableAdapter" Name="FineDetails" UserDataComponentName="FineDetailsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="restConnectionString1 (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        `order`.order_id, fine_dictionary.price, fine_dictionary.name, fine.fine_id, fine.fine_count AS `count`
FROM            fine INNER JOIN
                         fine_dictionary ON fine.fine_id = fine_dictionary.fine_id INNER JOIN
                         `order` ON fine.order_id = `order`.order_id</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="order_id" DataSetColumn="order_id" />
              <Mapping SourceColumn="price" DataSetColumn="price" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="fine_id" DataSetColumn="fine_id" />
              <Mapping SourceColumn="count" DataSetColumn="count" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="restDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="restDataSet" msprop:Generator_UserDSName="restDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="comment_or_complain" msprop:Generator_TableClassName="comment_or_complainDataTable" msprop:Generator_TableVarName="tablecomment_or_complain" msprop:Generator_RowChangedName="comment_or_complainRowChanged" msprop:Generator_TablePropName="comment_or_complain" msprop:Generator_RowDeletingName="comment_or_complainRowDeleting" msprop:Generator_RowChangingName="comment_or_complainRowChanging" msprop:Generator_RowEvHandlerName="comment_or_complainRowChangeEventHandler" msprop:Generator_RowDeletedName="comment_or_complainRowDeleted" msprop:Generator_RowClassName="comment_or_complainRow" msprop:Generator_UserTableName="comment_or_complain" msprop:Generator_RowEvArgName="comment_or_complainRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="comment_or_complain_id" msprop:Generator_ColumnVarNameInTable="columncomment_or_complain_id" msprop:Generator_ColumnPropNameInRow="comment_or_complain_id" msprop:Generator_ColumnPropNameInTable="comment_or_complain_idColumn" msprop:Generator_UserColumnName="comment_or_complain_id" type="xs:int" />
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name" type="xs:string" />
              <xs:element name="email" msprop:Generator_ColumnVarNameInTable="columnemail" msprop:Generator_ColumnPropNameInRow="email" msprop:Generator_ColumnPropNameInTable="emailColumn" msprop:Generator_UserColumnName="email" type="xs:string" minOccurs="0" />
              <xs:element name="comment" msprop:Generator_ColumnVarNameInTable="columncomment" msprop:Generator_ColumnPropNameInRow="comment" msprop:Generator_ColumnPropNameInTable="commentColumn" msprop:Generator_UserColumnName="comment" type="xs:string" />
              <xs:element name="order_id" msprop:Generator_ColumnVarNameInTable="columnorder_id" msprop:Generator_ColumnPropNameInRow="order_id" msprop:Generator_ColumnPropNameInTable="order_idColumn" msprop:Generator_UserColumnName="order_id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="dish_category" msprop:Generator_TableClassName="dish_categoryDataTable" msprop:Generator_TableVarName="tabledish_category" msprop:Generator_RowChangedName="dish_categoryRowChanged" msprop:Generator_TablePropName="dish_category" msprop:Generator_RowDeletingName="dish_categoryRowDeleting" msprop:Generator_RowChangingName="dish_categoryRowChanging" msprop:Generator_RowEvHandlerName="dish_categoryRowChangeEventHandler" msprop:Generator_RowDeletedName="dish_categoryRowDeleted" msprop:Generator_RowClassName="dish_categoryRow" msprop:Generator_UserTableName="dish_category" msprop:Generator_RowEvArgName="dish_categoryRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="category_id" msprop:Generator_ColumnVarNameInTable="columncategory_id" msprop:Generator_ColumnPropNameInRow="category_id" msprop:Generator_ColumnPropNameInTable="category_idColumn" msprop:Generator_UserColumnName="category_id" type="xs:int" />
              <xs:element name="category_name" msprop:Generator_ColumnVarNameInTable="columncategory_name" msprop:Generator_ColumnPropNameInRow="category_name" msprop:Generator_ColumnPropNameInTable="category_nameColumn" msprop:Generator_UserColumnName="category_name" type="xs:string" />
              <xs:element name="notes" msprop:Generator_ColumnVarNameInTable="columnnotes" msprop:Generator_ColumnPropNameInRow="notes" msprop:Generator_ColumnPropNameInTable="notesColumn" msprop:Generator_UserColumnName="notes" type="xs:string" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="dish_dictionary" msprop:Generator_TableClassName="dish_dictionaryDataTable" msprop:Generator_TableVarName="tabledish_dictionary" msprop:Generator_RowChangedName="dish_dictionaryRowChanged" msprop:Generator_TablePropName="dish_dictionary" msprop:Generator_RowDeletingName="dish_dictionaryRowDeleting" msprop:Generator_RowChangingName="dish_dictionaryRowChanging" msprop:Generator_RowEvHandlerName="dish_dictionaryRowChangeEventHandler" msprop:Generator_RowDeletedName="dish_dictionaryRowDeleted" msprop:Generator_RowClassName="dish_dictionaryRow" msprop:Generator_UserTableName="dish_dictionary" msprop:Generator_RowEvArgName="dish_dictionaryRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="dish_id" msprop:Generator_ColumnVarNameInTable="columndish_id" msprop:Generator_ColumnPropNameInRow="dish_id" msprop:Generator_ColumnPropNameInTable="dish_idColumn" msprop:Generator_UserColumnName="dish_id" type="xs:int" />
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name" type="xs:string" minOccurs="0" />
              <xs:element name="price" msprop:Generator_ColumnVarNameInTable="columnprice" msprop:Generator_ColumnPropNameInRow="price" msprop:Generator_ColumnPropNameInTable="priceColumn" msprop:Generator_UserColumnName="price" type="xs:int" />
              <xs:element name="amount" msprop:Generator_ColumnVarNameInTable="columnamount" msprop:Generator_ColumnPropNameInRow="amount" msprop:Generator_ColumnPropNameInTable="amountColumn" msprop:Generator_UserColumnName="amount" type="xs:int" />
              <xs:element name="category_id" msprop:Generator_ColumnVarNameInTable="columncategory_id" msprop:Generator_ColumnPropNameInRow="category_id" msprop:Generator_ColumnPropNameInTable="category_idColumn" msprop:Generator_UserColumnName="category_id" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="dishes_order" msprop:Generator_TableClassName="dishes_orderDataTable" msprop:Generator_TableVarName="tabledishes_order" msprop:Generator_RowChangedName="dishes_orderRowChanged" msprop:Generator_TablePropName="dishes_order" msprop:Generator_RowDeletingName="dishes_orderRowDeleting" msprop:Generator_RowChangingName="dishes_orderRowChanging" msprop:Generator_RowEvHandlerName="dishes_orderRowChangeEventHandler" msprop:Generator_RowDeletedName="dishes_orderRowDeleted" msprop:Generator_RowClassName="dishes_orderRow" msprop:Generator_UserTableName="dishes_order" msprop:Generator_RowEvArgName="dishes_orderRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="dish_id" msprop:Generator_ColumnVarNameInTable="columndish_id" msprop:Generator_ColumnPropNameInRow="dish_id" msprop:Generator_ColumnPropNameInTable="dish_idColumn" msprop:Generator_UserColumnName="dish_id" type="xs:int" />
              <xs:element name="order_id" msprop:Generator_ColumnVarNameInTable="columnorder_id" msprop:Generator_ColumnPropNameInRow="order_id" msprop:Generator_ColumnPropNameInTable="order_idColumn" msprop:Generator_UserColumnName="order_id" type="xs:int" />
              <xs:element name="dishes_count" msprop:Generator_ColumnVarNameInTable="columndishes_count" msprop:Generator_ColumnPropNameInRow="dishes_count" msprop:Generator_ColumnPropNameInTable="dishes_countColumn" msprop:Generator_UserColumnName="dishes_count" type="xs:int" minOccurs="0" />
              <xs:element name="dishes_order_id" msprop:Generator_ColumnVarNameInTable="columndishes_order_id" msprop:Generator_ColumnPropNameInRow="dishes_order_id" msprop:Generator_ColumnPropNameInTable="dishes_order_idColumn" msprop:Generator_UserColumnName="dishes_order_id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="fine" msprop:Generator_TableClassName="fineDataTable" msprop:Generator_TableVarName="tablefine" msprop:Generator_RowChangedName="fineRowChanged" msprop:Generator_TablePropName="fine" msprop:Generator_RowDeletingName="fineRowDeleting" msprop:Generator_RowChangingName="fineRowChanging" msprop:Generator_RowEvHandlerName="fineRowChangeEventHandler" msprop:Generator_RowDeletedName="fineRowDeleted" msprop:Generator_RowClassName="fineRow" msprop:Generator_UserTableName="fine" msprop:Generator_RowEvArgName="fineRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="fine_id" msprop:Generator_ColumnVarNameInTable="columnfine_id" msprop:Generator_ColumnPropNameInRow="fine_id" msprop:Generator_ColumnPropNameInTable="fine_idColumn" msprop:Generator_UserColumnName="fine_id" type="xs:int" />
              <xs:element name="order_id" msprop:Generator_ColumnVarNameInTable="columnorder_id" msprop:Generator_ColumnPropNameInRow="order_id" msprop:Generator_ColumnPropNameInTable="order_idColumn" msprop:Generator_UserColumnName="order_id" type="xs:int" />
              <xs:element name="fine_count" msprop:Generator_ColumnVarNameInTable="columnfine_count" msprop:Generator_ColumnPropNameInRow="fine_count" msprop:Generator_ColumnPropNameInTable="fine_countColumn" msprop:Generator_UserColumnName="fine_count" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="fine_dictionary" msprop:Generator_TableClassName="fine_dictionaryDataTable" msprop:Generator_TableVarName="tablefine_dictionary" msprop:Generator_RowChangedName="fine_dictionaryRowChanged" msprop:Generator_TablePropName="fine_dictionary" msprop:Generator_RowDeletingName="fine_dictionaryRowDeleting" msprop:Generator_RowChangingName="fine_dictionaryRowChanging" msprop:Generator_RowEvHandlerName="fine_dictionaryRowChangeEventHandler" msprop:Generator_RowDeletedName="fine_dictionaryRowDeleted" msprop:Generator_RowClassName="fine_dictionaryRow" msprop:Generator_UserTableName="fine_dictionary" msprop:Generator_RowEvArgName="fine_dictionaryRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="fine_id" msprop:Generator_ColumnVarNameInTable="columnfine_id" msprop:Generator_ColumnPropNameInRow="fine_id" msprop:Generator_ColumnPropNameInTable="fine_idColumn" msprop:Generator_UserColumnName="fine_id" type="xs:int" />
              <xs:element name="price" msprop:Generator_ColumnVarNameInTable="columnprice" msprop:Generator_ColumnPropNameInRow="price" msprop:Generator_ColumnPropNameInTable="priceColumn" msprop:Generator_UserColumnName="price" type="xs:int" />
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name" type="xs:string" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="order" msprop:Generator_TableClassName="orderDataTable" msprop:Generator_TableVarName="tableorder" msprop:Generator_RowChangedName="orderRowChanged" msprop:Generator_TablePropName="order" msprop:Generator_RowDeletingName="orderRowDeleting" msprop:Generator_RowChangingName="orderRowChanging" msprop:Generator_RowEvHandlerName="orderRowChangeEventHandler" msprop:Generator_RowDeletedName="orderRowDeleted" msprop:Generator_RowClassName="orderRow" msprop:Generator_UserTableName="order" msprop:Generator_RowEvArgName="orderRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="order_id" msprop:Generator_ColumnVarNameInTable="columnorder_id" msprop:Generator_ColumnPropNameInRow="order_id" msprop:Generator_ColumnPropNameInTable="order_idColumn" msprop:Generator_UserColumnName="order_id" type="xs:int" />
              <xs:element name="table_id" msprop:Generator_ColumnVarNameInTable="columntable_id" msprop:Generator_ColumnPropNameInRow="table_id" msprop:Generator_ColumnPropNameInTable="table_idColumn" msprop:Generator_UserColumnName="table_id" type="xs:int" minOccurs="0" />
              <xs:element name="order_date" msprop:Generator_ColumnVarNameInTable="columnorder_date" msprop:Generator_ColumnPropNameInRow="order_date" msprop:Generator_ColumnPropNameInTable="order_dateColumn" msprop:Generator_UserColumnName="order_date" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="position" msprop:Generator_TableClassName="positionDataTable" msprop:Generator_TableVarName="tableposition" msprop:Generator_RowChangedName="positionRowChanged" msprop:Generator_TablePropName="position" msprop:Generator_RowDeletingName="positionRowDeleting" msprop:Generator_RowChangingName="positionRowChanging" msprop:Generator_RowEvHandlerName="positionRowChangeEventHandler" msprop:Generator_RowDeletedName="positionRowDeleted" msprop:Generator_RowClassName="positionRow" msprop:Generator_UserTableName="position" msprop:Generator_RowEvArgName="positionRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="position_id" msprop:Generator_ColumnVarNameInTable="columnposition_id" msprop:Generator_ColumnPropNameInRow="position_id" msprop:Generator_ColumnPropNameInTable="position_idColumn" msprop:Generator_UserColumnName="position_id" type="xs:int" />
              <xs:element name="staff_position" msprop:Generator_ColumnVarNameInTable="columnstaff_position" msprop:Generator_ColumnPropNameInRow="staff_position" msprop:Generator_ColumnPropNameInTable="staff_positionColumn" msprop:Generator_UserColumnName="staff_position" type="xs:string" />
              <xs:element name="salary" msprop:Generator_ColumnVarNameInTable="columnsalary" msprop:Generator_ColumnPropNameInRow="salary" msprop:Generator_ColumnPropNameInTable="salaryColumn" msprop:Generator_UserColumnName="salary" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="service" msprop:Generator_TableClassName="serviceDataTable" msprop:Generator_TableVarName="tableservice" msprop:Generator_RowChangedName="serviceRowChanged" msprop:Generator_TablePropName="service" msprop:Generator_RowDeletingName="serviceRowDeleting" msprop:Generator_RowChangingName="serviceRowChanging" msprop:Generator_RowEvHandlerName="serviceRowChangeEventHandler" msprop:Generator_RowDeletedName="serviceRowDeleted" msprop:Generator_RowClassName="serviceRow" msprop:Generator_UserTableName="service" msprop:Generator_RowEvArgName="serviceRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="service_id" msprop:Generator_ColumnVarNameInTable="columnservice_id" msprop:Generator_ColumnPropNameInRow="service_id" msprop:Generator_ColumnPropNameInTable="service_idColumn" msprop:Generator_UserColumnName="service_id" type="xs:int" />
              <xs:element name="order_id" msprop:Generator_ColumnVarNameInTable="columnorder_id" msprop:Generator_ColumnPropNameInRow="order_id" msprop:Generator_ColumnPropNameInTable="order_idColumn" msprop:Generator_UserColumnName="order_id" type="xs:int" />
              <xs:element name="service_count" msprop:Generator_ColumnVarNameInTable="columnservice_count" msprop:Generator_ColumnPropNameInRow="service_count" msprop:Generator_ColumnPropNameInTable="service_countColumn" msprop:Generator_UserColumnName="service_count" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="service_dictionary" msprop:Generator_TableClassName="service_dictionaryDataTable" msprop:Generator_TableVarName="tableservice_dictionary" msprop:Generator_RowChangedName="service_dictionaryRowChanged" msprop:Generator_TablePropName="service_dictionary" msprop:Generator_RowDeletingName="service_dictionaryRowDeleting" msprop:Generator_RowChangingName="service_dictionaryRowChanging" msprop:Generator_RowEvHandlerName="service_dictionaryRowChangeEventHandler" msprop:Generator_RowDeletedName="service_dictionaryRowDeleted" msprop:Generator_RowClassName="service_dictionaryRow" msprop:Generator_UserTableName="service_dictionary" msprop:Generator_RowEvArgName="service_dictionaryRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="service_id" msprop:Generator_ColumnVarNameInTable="columnservice_id" msprop:Generator_ColumnPropNameInRow="service_id" msprop:Generator_ColumnPropNameInTable="service_idColumn" msprop:Generator_UserColumnName="service_id" type="xs:int" />
              <xs:element name="price" msprop:Generator_ColumnVarNameInTable="columnprice" msprop:Generator_ColumnPropNameInRow="price" msprop:Generator_ColumnPropNameInTable="priceColumn" msprop:Generator_UserColumnName="price" type="xs:int" />
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name" type="xs:string" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="staff" msprop:Generator_TableClassName="staffDataTable" msprop:Generator_TableVarName="tablestaff" msprop:Generator_RowChangedName="staffRowChanged" msprop:Generator_TablePropName="staff" msprop:Generator_RowDeletingName="staffRowDeleting" msprop:Generator_RowChangingName="staffRowChanging" msprop:Generator_RowEvHandlerName="staffRowChangeEventHandler" msprop:Generator_RowDeletedName="staffRowDeleted" msprop:Generator_RowClassName="staffRow" msprop:Generator_UserTableName="staff" msprop:Generator_RowEvArgName="staffRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="staff_id" msprop:Generator_ColumnVarNameInTable="columnstaff_id" msprop:Generator_ColumnPropNameInRow="staff_id" msprop:Generator_ColumnPropNameInTable="staff_idColumn" msprop:Generator_UserColumnName="staff_id" type="xs:int" />
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name" type="xs:string" />
              <xs:element name="passport_id" msprop:Generator_ColumnVarNameInTable="columnpassport_id" msprop:Generator_ColumnPropNameInRow="passport_id" msprop:Generator_ColumnPropNameInTable="passport_idColumn" msprop:Generator_UserColumnName="passport_id" type="xs:string" minOccurs="0" />
              <xs:element name="email" msprop:Generator_ColumnVarNameInTable="columnemail" msprop:Generator_ColumnPropNameInRow="email" msprop:Generator_ColumnPropNameInTable="emailColumn" msprop:Generator_UserColumnName="email" type="xs:string" minOccurs="0" />
              <xs:element name="position_id" msprop:Generator_ColumnVarNameInTable="columnposition_id" msprop:Generator_ColumnPropNameInRow="position_id" msprop:Generator_ColumnPropNameInTable="position_idColumn" msprop:Generator_UserColumnName="position_id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="staff_on_order" msprop:Generator_TableClassName="staff_on_orderDataTable" msprop:Generator_TableVarName="tablestaff_on_order" msprop:Generator_RowChangedName="staff_on_orderRowChanged" msprop:Generator_TablePropName="staff_on_order" msprop:Generator_RowDeletingName="staff_on_orderRowDeleting" msprop:Generator_RowChangingName="staff_on_orderRowChanging" msprop:Generator_RowEvHandlerName="staff_on_orderRowChangeEventHandler" msprop:Generator_RowDeletedName="staff_on_orderRowDeleted" msprop:Generator_RowClassName="staff_on_orderRow" msprop:Generator_UserTableName="staff_on_order" msprop:Generator_RowEvArgName="staff_on_orderRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="staff_id" msprop:Generator_ColumnVarNameInTable="columnstaff_id" msprop:Generator_ColumnPropNameInRow="staff_id" msprop:Generator_ColumnPropNameInTable="staff_idColumn" msprop:Generator_UserColumnName="staff_id" type="xs:int" />
              <xs:element name="order_id" msprop:Generator_ColumnVarNameInTable="columnorder_id" msprop:Generator_ColumnPropNameInRow="order_id" msprop:Generator_ColumnPropNameInTable="order_idColumn" msprop:Generator_UserColumnName="order_id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="users" msprop:Generator_TableClassName="usersDataTable" msprop:Generator_TableVarName="tableusers" msprop:Generator_RowChangedName="usersRowChanged" msprop:Generator_TablePropName="users" msprop:Generator_RowDeletingName="usersRowDeleting" msprop:Generator_RowChangingName="usersRowChanging" msprop:Generator_RowEvHandlerName="usersRowChangeEventHandler" msprop:Generator_RowDeletedName="usersRowDeleted" msprop:Generator_RowClassName="usersRow" msprop:Generator_UserTableName="users" msprop:Generator_RowEvArgName="usersRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="user_id" msprop:Generator_ColumnVarNameInTable="columnuser_id" msprop:Generator_ColumnPropNameInRow="user_id" msprop:Generator_ColumnPropNameInTable="user_idColumn" msprop:Generator_UserColumnName="user_id" type="xs:string" />
              <xs:element name="hash" msprop:Generator_ColumnVarNameInTable="columnhash" msprop:Generator_ColumnPropNameInRow="hash" msprop:Generator_ColumnPropNameInTable="hashColumn" msprop:Generator_UserColumnName="hash" type="xs:string" />
              <xs:element name="email" msprop:Generator_ColumnVarNameInTable="columnemail" msprop:Generator_ColumnPropNameInRow="email" msprop:Generator_ColumnPropNameInTable="emailColumn" msprop:Generator_UserColumnName="email" type="xs:string" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="dish_menu" msprop:Generator_TableClassName="dish_menuDataTable" msprop:Generator_TableVarName="tabledish_menu" msprop:Generator_RowChangedName="dish_menuRowChanged" msprop:Generator_TablePropName="dish_menu" msprop:Generator_RowDeletingName="dish_menuRowDeleting" msprop:Generator_RowChangingName="dish_menuRowChanging" msprop:Generator_RowEvHandlerName="dish_menuRowChangeEventHandler" msprop:Generator_RowDeletedName="dish_menuRowDeleted" msprop:Generator_RowClassName="dish_menuRow" msprop:Generator_UserTableName="dish_menu" msprop:Generator_RowEvArgName="dish_menuRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="dish_id" msprop:Generator_ColumnVarNameInTable="columndish_id" msprop:Generator_ColumnPropNameInRow="dish_id" msprop:Generator_ColumnPropNameInTable="dish_idColumn" msprop:Generator_UserColumnName="dish_id" type="xs:int" />
              <xs:element name="category_name" msprop:Generator_ColumnVarNameInTable="columncategory_name" msprop:Generator_ColumnPropNameInRow="category_name" msprop:Generator_ColumnPropNameInTable="category_nameColumn" msprop:Generator_UserColumnName="category_name" type="xs:string" />
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name" type="xs:string" minOccurs="0" />
              <xs:element name="amount" msprop:Generator_ColumnVarNameInTable="columnamount" msprop:Generator_ColumnPropNameInRow="amount" msprop:Generator_ColumnPropNameInTable="amountColumn" msprop:Generator_UserColumnName="amount" type="xs:int" />
              <xs:element name="price" msprop:Generator_ColumnVarNameInTable="columnprice" msprop:Generator_ColumnPropNameInRow="price" msprop:Generator_ColumnPropNameInTable="priceColumn" msprop:Generator_UserColumnName="price" type="xs:int" />
              <xs:element name="notes" msprop:Generator_ColumnVarNameInTable="columnnotes" msprop:Generator_ColumnPropNameInRow="notes" msprop:Generator_ColumnPropNameInTable="notesColumn" msprop:Generator_UserColumnName="notes" type="xs:string" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="fines_and_services" msprop:Generator_TableClassName="fines_and_servicesDataTable" msprop:Generator_TableVarName="tablefines_and_services" msprop:Generator_RowChangedName="fines_and_servicesRowChanged" msprop:Generator_TablePropName="fines_and_services" msprop:Generator_RowDeletingName="fines_and_servicesRowDeleting" msprop:Generator_RowChangingName="fines_and_servicesRowChanging" msprop:Generator_RowEvHandlerName="fines_and_servicesRowChangeEventHandler" msprop:Generator_RowDeletedName="fines_and_servicesRowDeleted" msprop:Generator_RowClassName="fines_and_servicesRow" msprop:Generator_UserTableName="fines_and_services" msprop:Generator_RowEvArgName="fines_and_servicesRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name" type="xs:string" minOccurs="0" />
              <xs:element name="price" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnprice" msprop:Generator_ColumnPropNameInRow="price" msprop:Generator_ColumnPropNameInTable="priceColumn" msprop:Generator_UserColumnName="price" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="money_from_order" msprop:Generator_TableClassName="money_from_orderDataTable" msprop:Generator_TableVarName="tablemoney_from_order" msprop:Generator_RowChangedName="money_from_orderRowChanged" msprop:Generator_TablePropName="money_from_order" msprop:Generator_RowDeletingName="money_from_orderRowDeleting" msprop:Generator_RowChangingName="money_from_orderRowChanging" msprop:Generator_RowEvHandlerName="money_from_orderRowChangeEventHandler" msprop:Generator_RowDeletedName="money_from_orderRowDeleted" msprop:Generator_RowClassName="money_from_orderRow" msprop:Generator_UserTableName="money_from_order" msprop:Generator_RowEvArgName="money_from_orderRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="order_id" msprop:Generator_ColumnVarNameInTable="columnorder_id" msprop:Generator_ColumnPropNameInRow="order_id" msprop:Generator_ColumnPropNameInTable="order_idColumn" msprop:Generator_UserColumnName="order_id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="order_list" msprop:Generator_TableClassName="order_listDataTable" msprop:Generator_TableVarName="tableorder_list" msprop:Generator_RowChangedName="order_listRowChanged" msprop:Generator_TablePropName="order_list" msprop:Generator_RowDeletingName="order_listRowDeleting" msprop:Generator_RowChangingName="order_listRowChanging" msprop:Generator_RowEvHandlerName="order_listRowChangeEventHandler" msprop:Generator_RowDeletedName="order_listRowDeleted" msprop:Generator_RowClassName="order_listRow" msprop:Generator_UserTableName="order_list" msprop:Generator_RowEvArgName="order_listRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="order_x0020__x2116_" msprop:Generator_ColumnVarNameInTable="_columnorder__" msprop:Generator_ColumnPropNameInRow="_order__" msprop:Generator_ColumnPropNameInTable="_order__Column" msprop:Generator_UserColumnName="order №" type="xs:int" />
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name" type="xs:string" minOccurs="0" />
              <xs:element name="count" msprop:Generator_ColumnVarNameInTable="columncount" msprop:Generator_ColumnPropNameInRow="count" msprop:Generator_ColumnPropNameInTable="countColumn" msprop:Generator_UserColumnName="count" type="xs:int" minOccurs="0" />
              <xs:element name="price" msprop:Generator_ColumnVarNameInTable="columnprice" msprop:Generator_ColumnPropNameInRow="price" msprop:Generator_ColumnPropNameInTable="priceColumn" msprop:Generator_UserColumnName="price" type="xs:int" />
              <xs:element name="total" msprop:Generator_ColumnVarNameInTable="columntotal" msprop:Generator_ColumnPropNameInRow="total" msprop:Generator_ColumnPropNameInTable="totalColumn" msprop:Generator_UserColumnName="total" type="xs:long" minOccurs="0" />
              <xs:element name="table_x0020__x2116_" msprop:Generator_ColumnVarNameInTable="_columntable__" msprop:Generator_ColumnPropNameInRow="_table__" msprop:Generator_ColumnPropNameInTable="_table__Column" msprop:Generator_UserColumnName="table №" type="xs:int" minOccurs="0" />
              <xs:element name="order_x0020_date" msprop:Generator_ColumnVarNameInTable="columnorder_date" msprop:Generator_ColumnPropNameInRow="order_date" msprop:Generator_ColumnPropNameInTable="order_dateColumn" msprop:Generator_UserColumnName="order date" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="rest_staff" msprop:Generator_TableClassName="rest_staffDataTable" msprop:Generator_TableVarName="tablerest_staff" msprop:Generator_RowChangedName="rest_staffRowChanged" msprop:Generator_TablePropName="rest_staff" msprop:Generator_RowDeletingName="rest_staffRowDeleting" msprop:Generator_RowChangingName="rest_staffRowChanging" msprop:Generator_RowEvHandlerName="rest_staffRowChangeEventHandler" msprop:Generator_RowDeletedName="rest_staffRowDeleted" msprop:Generator_RowClassName="rest_staffRow" msprop:Generator_UserTableName="rest_staff" msprop:Generator_RowEvArgName="rest_staffRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="staff_id" msprop:Generator_ColumnVarNameInTable="columnstaff_id" msprop:Generator_ColumnPropNameInRow="staff_id" msprop:Generator_ColumnPropNameInTable="staff_idColumn" msprop:Generator_UserColumnName="staff_id" type="xs:int" />
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name" type="xs:string" />
              <xs:element name="passport_id" msprop:Generator_ColumnVarNameInTable="columnpassport_id" msprop:Generator_ColumnPropNameInRow="passport_id" msprop:Generator_ColumnPropNameInTable="passport_idColumn" msprop:Generator_UserColumnName="passport_id" type="xs:string" minOccurs="0" />
              <xs:element name="email" msprop:Generator_ColumnVarNameInTable="columnemail" msprop:Generator_ColumnPropNameInRow="email" msprop:Generator_ColumnPropNameInTable="emailColumn" msprop:Generator_UserColumnName="email" type="xs:string" minOccurs="0" />
              <xs:element name="position" msprop:Generator_ColumnVarNameInTable="columnposition" msprop:Generator_ColumnPropNameInRow="position" msprop:Generator_ColumnPropNameInTable="positionColumn" msprop:Generator_UserColumnName="position" type="xs:string" />
              <xs:element name="salary" msprop:Generator_ColumnVarNameInTable="columnsalary" msprop:Generator_ColumnPropNameInRow="salary" msprop:Generator_ColumnPropNameInTable="salaryColumn" msprop:Generator_UserColumnName="salary" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DataTable1" msprop:Generator_TableClassName="DataTable1DataTable" msprop:Generator_TableVarName="tableDataTable1" msprop:Generator_RowChangedName="DataTable1RowChanged" msprop:Generator_TablePropName="DataTable1" msprop:Generator_RowDeletingName="DataTable1RowDeleting" msprop:Generator_RowChangingName="DataTable1RowChanging" msprop:Generator_RowEvHandlerName="DataTable1RowChangeEventHandler" msprop:Generator_RowDeletedName="DataTable1RowDeleted" msprop:Generator_RowClassName="DataTable1Row" msprop:Generator_UserTableName="DataTable1" msprop:Generator_RowEvArgName="DataTable1RowChangeEvent">
          <xs:complexType>
          </xs:complexType>
        </xs:element>
        <xs:element name="OrderComments" msprop:Generator_TableClassName="OrderCommentsDataTable" msprop:Generator_TableVarName="tableOrderComments" msprop:Generator_TablePropName="OrderComments" msprop:Generator_RowDeletingName="OrderCommentsRowDeleting" msprop:Generator_RowChangingName="OrderCommentsRowChanging" msprop:Generator_RowEvHandlerName="OrderCommentsRowChangeEventHandler" msprop:Generator_RowDeletedName="OrderCommentsRowDeleted" msprop:Generator_UserTableName="OrderComments" msprop:Generator_RowChangedName="OrderCommentsRowChanged" msprop:Generator_RowEvArgName="OrderCommentsRowChangeEvent" msprop:Generator_RowClassName="OrderCommentsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name" type="xs:string" />
              <xs:element name="email" msprop:Generator_ColumnVarNameInTable="columnemail" msprop:Generator_ColumnPropNameInRow="email" msprop:Generator_ColumnPropNameInTable="emailColumn" msprop:Generator_UserColumnName="email" type="xs:string" minOccurs="0" />
              <xs:element name="comment" msprop:Generator_ColumnVarNameInTable="columncomment" msprop:Generator_ColumnPropNameInRow="comment" msprop:Generator_ColumnPropNameInTable="commentColumn" msprop:Generator_UserColumnName="comment" type="xs:string" />
              <xs:element name="order_id" msprop:Generator_ColumnVarNameInTable="columnorder_id" msprop:Generator_ColumnPropNameInRow="order_id" msprop:Generator_ColumnPropNameInTable="order_idColumn" msprop:Generator_UserColumnName="order_id" type="xs:int" />
              <xs:element name="table_id" msprop:Generator_ColumnVarNameInTable="columntable_id" msprop:Generator_ColumnPropNameInRow="table_id" msprop:Generator_ColumnPropNameInTable="table_idColumn" msprop:Generator_UserColumnName="table_id" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ServiceDetails" msprop:Generator_TableClassName="ServiceDetailsDataTable" msprop:Generator_TableVarName="tableServiceDetails" msprop:Generator_TablePropName="ServiceDetails" msprop:Generator_RowDeletingName="ServiceDetailsRowDeleting" msprop:Generator_RowChangingName="ServiceDetailsRowChanging" msprop:Generator_RowEvHandlerName="ServiceDetailsRowChangeEventHandler" msprop:Generator_RowDeletedName="ServiceDetailsRowDeleted" msprop:Generator_UserTableName="ServiceDetails" msprop:Generator_RowChangedName="ServiceDetailsRowChanged" msprop:Generator_RowEvArgName="ServiceDetailsRowChangeEvent" msprop:Generator_RowClassName="ServiceDetailsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="order_id" msprop:Generator_ColumnVarNameInTable="columnorder_id" msprop:Generator_ColumnPropNameInRow="order_id" msprop:Generator_ColumnPropNameInTable="order_idColumn" msprop:Generator_UserColumnName="order_id" type="xs:int" />
              <xs:element name="price" msprop:Generator_ColumnVarNameInTable="columnprice" msprop:Generator_ColumnPropNameInRow="price" msprop:Generator_ColumnPropNameInTable="priceColumn" msprop:Generator_UserColumnName="price" type="xs:int" />
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name" type="xs:string" />
              <xs:element name="service_id" msprop:Generator_ColumnVarNameInTable="columnservice_id" msprop:Generator_ColumnPropNameInRow="service_id" msprop:Generator_ColumnPropNameInTable="service_idColumn" msprop:Generator_UserColumnName="service_id" type="xs:int" />
              <xs:element name="count" msprop:Generator_ColumnVarNameInTable="columncount" msprop:Generator_ColumnPropNameInRow="count" msprop:Generator_ColumnPropNameInTable="countColumn" msprop:Generator_UserColumnName="count" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="FineDetails" msprop:Generator_TableClassName="FineDetailsDataTable" msprop:Generator_TableVarName="tableFineDetails" msprop:Generator_TablePropName="FineDetails" msprop:Generator_RowDeletingName="FineDetailsRowDeleting" msprop:Generator_RowChangingName="FineDetailsRowChanging" msprop:Generator_RowEvHandlerName="FineDetailsRowChangeEventHandler" msprop:Generator_RowDeletedName="FineDetailsRowDeleted" msprop:Generator_UserTableName="FineDetails" msprop:Generator_RowChangedName="FineDetailsRowChanged" msprop:Generator_RowEvArgName="FineDetailsRowChangeEvent" msprop:Generator_RowClassName="FineDetailsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="order_id" msprop:Generator_ColumnVarNameInTable="columnorder_id" msprop:Generator_ColumnPropNameInRow="order_id" msprop:Generator_ColumnPropNameInTable="order_idColumn" msprop:Generator_UserColumnName="order_id" type="xs:int" />
              <xs:element name="price" msprop:Generator_ColumnVarNameInTable="columnprice" msprop:Generator_ColumnPropNameInRow="price" msprop:Generator_ColumnPropNameInTable="priceColumn" msprop:Generator_UserColumnName="price" type="xs:int" />
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name" type="xs:string" />
              <xs:element name="fine_id" msprop:Generator_ColumnVarNameInTable="columnfine_id" msprop:Generator_ColumnPropNameInRow="fine_id" msprop:Generator_ColumnPropNameInTable="fine_idColumn" msprop:Generator_UserColumnName="fine_id" type="xs:int" />
              <xs:element name="count" msprop:Generator_ColumnVarNameInTable="columncount" msprop:Generator_ColumnPropNameInRow="count" msprop:Generator_ColumnPropNameInTable="countColumn" msprop:Generator_UserColumnName="count" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:comment_or_complain" />
      <xs:field xpath="mstns:comment_or_complain_id" />
    </xs:unique>
    <xs:unique name="dish_category_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:dish_category" />
      <xs:field xpath="mstns:category_id" />
    </xs:unique>
    <xs:unique name="dish_dictionary_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:dish_dictionary" />
      <xs:field xpath="mstns:dish_id" />
    </xs:unique>
    <xs:unique name="dishes_order_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:dishes_order" />
      <xs:field xpath="mstns:dishes_order_id" />
    </xs:unique>
    <xs:unique name="fine_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:fine" />
      <xs:field xpath="mstns:fine_id" />
      <xs:field xpath="mstns:order_id" />
    </xs:unique>
    <xs:unique name="fine_dictionary_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:fine_dictionary" />
      <xs:field xpath="mstns:fine_id" />
    </xs:unique>
    <xs:unique name="order_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:order" />
      <xs:field xpath="mstns:order_id" />
    </xs:unique>
    <xs:unique name="position_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:position" />
      <xs:field xpath="mstns:position_id" />
    </xs:unique>
    <xs:unique name="service_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:service" />
      <xs:field xpath="mstns:service_id" />
      <xs:field xpath="mstns:order_id" />
    </xs:unique>
    <xs:unique name="service_dictionary_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:service_dictionary" />
      <xs:field xpath="mstns:service_id" />
    </xs:unique>
    <xs:unique name="staff_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:staff" />
      <xs:field xpath="mstns:staff_id" />
    </xs:unique>
    <xs:unique name="staff_on_order_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:staff_on_order" />
      <xs:field xpath="mstns:staff_id" />
      <xs:field xpath="mstns:order_id" />
    </xs:unique>
    <xs:unique name="users_Constraint1" msdata:ConstraintName="Constraint1">
      <xs:selector xpath=".//mstns:users" />
      <xs:field xpath="mstns:email" />
    </xs:unique>
    <xs:unique name="Constraint2" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:users" />
      <xs:field xpath="mstns:user_id" />
    </xs:unique>
    <xs:unique name="dish_menu_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:dish_menu" />
      <xs:field xpath="mstns:dish_id" />
    </xs:unique>
    <xs:unique name="rest_staff_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:rest_staff" />
      <xs:field xpath="mstns:staff_id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="fk_comment_order" msdata:parent="order" msdata:child="comment_or_complain" msdata:parentkey="order_id" msdata:childkey="order_id" msprop:Generator_UserChildTable="comment_or_complain" msprop:Generator_ChildPropName="Getcomment_or_complainRows" msprop:Generator_UserRelationName="fk_comment_order" msprop:Generator_ParentPropName="orderRow" msprop:Generator_RelationVarName="relationfk_comment_order" msprop:Generator_UserParentTable="order" />
      <msdata:Relationship name="fk_dish_to_category" msdata:parent="dish_category" msdata:child="dish_dictionary" msdata:parentkey="category_id" msdata:childkey="category_id" msprop:Generator_UserChildTable="dish_dictionary" msprop:Generator_ChildPropName="Getdish_dictionaryRows" msprop:Generator_UserRelationName="fk_dish_to_category" msprop:Generator_RelationVarName="relationfk_dish_to_category" msprop:Generator_UserParentTable="dish_category" msprop:Generator_ParentPropName="dish_categoryRow" />
      <msdata:Relationship name="fk_order_dish_dish" msdata:parent="dish_dictionary" msdata:child="dishes_order" msdata:parentkey="dish_id" msdata:childkey="dish_id" msprop:Generator_UserChildTable="dishes_order" msprop:Generator_ChildPropName="Getdishes_orderRows" msprop:Generator_UserRelationName="fk_order_dish_dish" msprop:Generator_RelationVarName="relationfk_order_dish_dish" msprop:Generator_UserParentTable="dish_dictionary" msprop:Generator_ParentPropName="dish_dictionaryRow" />
      <msdata:Relationship name="fk_order_dish_order" msdata:parent="order" msdata:child="dishes_order" msdata:parentkey="order_id" msdata:childkey="order_id" msprop:Generator_UserChildTable="dishes_order" msprop:Generator_ChildPropName="Getdishes_orderRows" msprop:Generator_UserRelationName="fk_order_dish_order" msprop:Generator_ParentPropName="orderRow" msprop:Generator_RelationVarName="relationfk_order_dish_order" msprop:Generator_UserParentTable="order" />
      <msdata:Relationship name="fk_fin_order" msdata:parent="order" msdata:child="fine" msdata:parentkey="order_id" msdata:childkey="order_id" msprop:Generator_UserChildTable="fine" msprop:Generator_ChildPropName="GetfineRows" msprop:Generator_UserRelationName="fk_fin_order" msprop:Generator_ParentPropName="orderRow" msprop:Generator_RelationVarName="relationfk_fin_order" msprop:Generator_UserParentTable="order" />
      <msdata:Relationship name="fk_fine_dict" msdata:parent="fine_dictionary" msdata:child="fine" msdata:parentkey="fine_id" msdata:childkey="fine_id" msprop:Generator_UserChildTable="fine" msprop:Generator_ChildPropName="GetfineRows" msprop:Generator_UserRelationName="fk_fine_dict" msprop:Generator_ParentPropName="fine_dictionaryRow" msprop:Generator_RelationVarName="relationfk_fine_dict" msprop:Generator_UserParentTable="fine_dictionary" />
      <msdata:Relationship name="fk_service_id" msdata:parent="service_dictionary" msdata:child="service" msdata:parentkey="service_id" msdata:childkey="service_id" msprop:Generator_UserChildTable="service" msprop:Generator_ChildPropName="GetserviceRows" msprop:Generator_UserRelationName="fk_service_id" msprop:Generator_ParentPropName="service_dictionaryRow" msprop:Generator_RelationVarName="relationfk_service_id" msprop:Generator_UserParentTable="service_dictionary" />
      <msdata:Relationship name="fk_service_order" msdata:parent="order" msdata:child="service" msdata:parentkey="order_id" msdata:childkey="order_id" msprop:Generator_UserChildTable="service" msprop:Generator_ChildPropName="GetserviceRows" msprop:Generator_UserRelationName="fk_service_order" msprop:Generator_RelationVarName="relationfk_service_order" msprop:Generator_UserParentTable="order" msprop:Generator_ParentPropName="orderRow" />
      <msdata:Relationship name="fk_staff_position" msdata:parent="position" msdata:child="staff" msdata:parentkey="position_id" msdata:childkey="position_id" msprop:Generator_UserChildTable="staff" msprop:Generator_ChildPropName="GetstaffRows" msprop:Generator_UserRelationName="fk_staff_position" msprop:Generator_RelationVarName="relationfk_staff_position" msprop:Generator_UserParentTable="position" msprop:Generator_ParentPropName="positionRow" />
      <msdata:Relationship name="fk_staff_on_order_id" msdata:parent="staff" msdata:child="staff_on_order" msdata:parentkey="staff_id" msdata:childkey="staff_id" msprop:Generator_UserChildTable="staff_on_order" msprop:Generator_ChildPropName="Getstaff_on_orderRows" msprop:Generator_UserRelationName="fk_staff_on_order_id" msprop:Generator_RelationVarName="relationfk_staff_on_order_id" msprop:Generator_UserParentTable="staff" msprop:Generator_ParentPropName="staffRow" />
      <msdata:Relationship name="fk_staff_on_order_id_order" msdata:parent="order" msdata:child="staff_on_order" msdata:parentkey="order_id" msdata:childkey="order_id" msprop:Generator_UserChildTable="staff_on_order" msprop:Generator_ChildPropName="Getstaff_on_orderRows" msprop:Generator_UserRelationName="fk_staff_on_order_id_order" msprop:Generator_RelationVarName="relationfk_staff_on_order_id_order" msprop:Generator_UserParentTable="order" msprop:Generator_ParentPropName="orderRow" />
      <msdata:Relationship name="fk_staff_on_order_id_order1" msdata:parent="OrderComments" msdata:child="staff_on_order" msdata:parentkey="order_id" msdata:childkey="order_id" msprop:Generator_UserChildTable="staff_on_order" msprop:Generator_ChildPropName="Getstaff_on_orderRows" msprop:Generator_UserRelationName="fk_staff_on_order_id_order1" msprop:Generator_RelationVarName="relationfk_staff_on_order_id_order1" msprop:Generator_UserParentTable="OrderComments" msprop:Generator_ParentPropName="OrderCommentsRow" />
      <msdata:Relationship name="fk_service_order1" msdata:parent="OrderComments" msdata:child="service" msdata:parentkey="order_id" msdata:childkey="order_id" msprop:Generator_UserChildTable="service" msprop:Generator_ChildPropName="GetserviceRows" msprop:Generator_UserRelationName="fk_service_order1" msprop:Generator_RelationVarName="relationfk_service_order1" msprop:Generator_UserParentTable="OrderComments" msprop:Generator_ParentPropName="OrderCommentsRow" />
      <msdata:Relationship name="fk_fin_order1" msdata:parent="OrderComments" msdata:child="fine" msdata:parentkey="order_id" msdata:childkey="order_id" msprop:Generator_UserChildTable="fine" msprop:Generator_ChildPropName="GetfineRows" msprop:Generator_UserRelationName="fk_fin_order1" msprop:Generator_RelationVarName="relationfk_fin_order1" msprop:Generator_UserParentTable="OrderComments" msprop:Generator_ParentPropName="OrderCommentsRow" />
      <msdata:Relationship name="fk_order_dish_order1" msdata:parent="OrderComments" msdata:child="dishes_order" msdata:parentkey="order_id" msdata:childkey="order_id" msprop:Generator_UserChildTable="dishes_order" msprop:Generator_ChildPropName="Getdishes_orderRows" msprop:Generator_UserRelationName="fk_order_dish_order1" msprop:Generator_RelationVarName="relationfk_order_dish_order1" msprop:Generator_UserParentTable="OrderComments" msprop:Generator_ParentPropName="OrderCommentsRow" />
      <msdata:Relationship name="fk_comment_order1" msdata:parent="OrderComments" msdata:child="comment_or_complain" msdata:parentkey="order_id" msdata:childkey="order_id" msprop:Generator_UserChildTable="comment_or_complain" msprop:Generator_ChildPropName="Getcomment_or_complainRows" msprop:Generator_UserRelationName="fk_comment_order1" msprop:Generator_RelationVarName="relationfk_comment_order1" msprop:Generator_UserParentTable="OrderComments" msprop:Generator_ParentPropName="OrderCommentsRow" />
      <msdata:Relationship name="fk_comment_order2" msdata:parent="ServiceDetails" msdata:child="comment_or_complain" msdata:parentkey="order_id" msdata:childkey="order_id" msprop:Generator_UserChildTable="comment_or_complain" msprop:Generator_ChildPropName="Getcomment_or_complainRows" msprop:Generator_UserRelationName="fk_comment_order2" msprop:Generator_RelationVarName="relationfk_comment_order2" msprop:Generator_UserParentTable="ServiceDetails" msprop:Generator_ParentPropName="ServiceDetailsRow" />
      <msdata:Relationship name="fk_order_dish_order2" msdata:parent="ServiceDetails" msdata:child="dishes_order" msdata:parentkey="order_id" msdata:childkey="order_id" msprop:Generator_UserChildTable="dishes_order" msprop:Generator_ChildPropName="Getdishes_orderRows" msprop:Generator_UserRelationName="fk_order_dish_order2" msprop:Generator_RelationVarName="relationfk_order_dish_order2" msprop:Generator_UserParentTable="ServiceDetails" msprop:Generator_ParentPropName="ServiceDetailsRow" />
      <msdata:Relationship name="fk_fin_order2" msdata:parent="ServiceDetails" msdata:child="fine" msdata:parentkey="order_id" msdata:childkey="order_id" msprop:Generator_UserChildTable="fine" msprop:Generator_ChildPropName="GetfineRows" msprop:Generator_UserRelationName="fk_fin_order2" msprop:Generator_RelationVarName="relationfk_fin_order2" msprop:Generator_UserParentTable="ServiceDetails" msprop:Generator_ParentPropName="ServiceDetailsRow" />
      <msdata:Relationship name="fk_service_order2" msdata:parent="ServiceDetails" msdata:child="service" msdata:parentkey="order_id" msdata:childkey="order_id" msprop:Generator_UserChildTable="service" msprop:Generator_ChildPropName="GetserviceRows" msprop:Generator_UserRelationName="fk_service_order2" msprop:Generator_RelationVarName="relationfk_service_order2" msprop:Generator_UserParentTable="ServiceDetails" msprop:Generator_ParentPropName="ServiceDetailsRow" />
      <msdata:Relationship name="fk_staff_on_order_id_order2" msdata:parent="ServiceDetails" msdata:child="staff_on_order" msdata:parentkey="order_id" msdata:childkey="order_id" msprop:Generator_UserChildTable="staff_on_order" msprop:Generator_ChildPropName="Getstaff_on_orderRows" msprop:Generator_UserRelationName="fk_staff_on_order_id_order2" msprop:Generator_RelationVarName="relationfk_staff_on_order_id_order2" msprop:Generator_UserParentTable="ServiceDetails" msprop:Generator_ParentPropName="ServiceDetailsRow" />
      <msdata:Relationship name="fk_comment_order3" msdata:parent="FineDetails" msdata:child="comment_or_complain" msdata:parentkey="order_id" msdata:childkey="order_id" msprop:Generator_UserChildTable="comment_or_complain" msprop:Generator_ChildPropName="Getcomment_or_complainRows" msprop:Generator_UserRelationName="fk_comment_order3" msprop:Generator_RelationVarName="relationfk_comment_order3" msprop:Generator_UserParentTable="FineDetails" msprop:Generator_ParentPropName="FineDetailsRow" />
      <msdata:Relationship name="fk_order_dish_order3" msdata:parent="FineDetails" msdata:child="dishes_order" msdata:parentkey="order_id" msdata:childkey="order_id" msprop:Generator_UserChildTable="dishes_order" msprop:Generator_ChildPropName="Getdishes_orderRows" msprop:Generator_UserRelationName="fk_order_dish_order3" msprop:Generator_RelationVarName="relationfk_order_dish_order3" msprop:Generator_UserParentTable="FineDetails" msprop:Generator_ParentPropName="FineDetailsRow" />
      <msdata:Relationship name="fk_fin_order3" msdata:parent="FineDetails" msdata:child="fine" msdata:parentkey="order_id" msdata:childkey="order_id" msprop:Generator_UserChildTable="fine" msprop:Generator_ChildPropName="GetfineRows" msprop:Generator_UserRelationName="fk_fin_order3" msprop:Generator_RelationVarName="relationfk_fin_order3" msprop:Generator_UserParentTable="FineDetails" msprop:Generator_ParentPropName="FineDetailsRow" />
      <msdata:Relationship name="fk_service_order3" msdata:parent="FineDetails" msdata:child="service" msdata:parentkey="order_id" msdata:childkey="order_id" msprop:Generator_UserChildTable="service" msprop:Generator_ChildPropName="GetserviceRows" msprop:Generator_UserRelationName="fk_service_order3" msprop:Generator_RelationVarName="relationfk_service_order3" msprop:Generator_UserParentTable="FineDetails" msprop:Generator_ParentPropName="FineDetailsRow" />
      <msdata:Relationship name="fk_staff_on_order_id_order3" msdata:parent="FineDetails" msdata:child="staff_on_order" msdata:parentkey="order_id" msdata:childkey="order_id" msprop:Generator_UserChildTable="staff_on_order" msprop:Generator_ChildPropName="Getstaff_on_orderRows" msprop:Generator_UserRelationName="fk_staff_on_order_id_order3" msprop:Generator_RelationVarName="relationfk_staff_on_order_id_order3" msprop:Generator_UserParentTable="FineDetails" msprop:Generator_ParentPropName="FineDetailsRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>